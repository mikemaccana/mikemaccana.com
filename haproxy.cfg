global
	# Log to systemd's /dev/log compatibility socket
	log /dev/log local0 info
	
	chroot /var/lib/haproxy
	pidfile /var/run/haproxy.pid
	maxconn 4000
	user haproxy
	group haproxy
	daemon

	# turn on stats unix socket - see http://cbonte.github.io/haproxy-dconv/1.8/configuration.html#3.1-stats%20socket
	stats socket /var/lib/haproxy/stats mode 600 level admin 
	stats timeout 2m

	# From https://mozilla.github.io/server-side-tls/ssl-config-generator/ 
	# Intermediate config as of Jan 2018 - update it from the link above!
	tune.ssl.default-dh-param 2048
	ssl-default-bind-ciphers ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA:ECDHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA:ECDHE-ECDSA-DES-CBC3-SHA:ECDHE-RSA-DES-CBC3-SHA:EDH-RSA-DES-CBC3-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:DES-CBC3-SHA:!DSS
	ssl-default-bind-options no-sslv3 no-tls-tickets
	ssl-default-server-ciphers ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA:ECDHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA:ECDHE-ECDSA-DES-CBC3-SHA:ECDHE-RSA-DES-CBC3-SHA:EDH-RSA-DES-CBC3-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:DES-CBC3-SHA:!DSS
	ssl-default-server-options no-sslv3 no-tls-tickets

defaults
	mode http

	# Needed for GeoIP
	option forwardfor

	# See http://cbonte.github.io/haproxy-dconv/1.8/configuration.html#option%20http-server-close
	option http-server-close

	log global
	option httplog
	option dontlognull
	option http-server-close
	option forwardfor except 127.0.0.0/8
	option redispatch
	retries 3
	timeout http-request 10s
	timeout queue 1m
	timeout client 1m
	timeout server 1m

	timeout check 10s
	maxconn 3000

	# From http://stackoverflow.com/questions/21419859/configuring-haproxy-to-work-with-server-sent-events
	# Set the max time to wait for a connection attempt to a server to succeed
	timeout connect 30s
	# handle a client suddenly disappearing from the net
	timeout client-fin 30s
	option http-server-close

	# The 'stats' site, where we see what's up and what's down - uncomment and set a password if you want it!
	# stats enable
	# stats uri /haproxy?stats
	# stats realm Strictly\ Private
	# stats auth someusername:i-am-an-awful-password-and-you-should-change-me

	# Show a custom page during site maintenance (ie, when 'blue' and 'green' are both down)
	# errorfile 503 /etc/haproxy/errors/503-mycustom.http

frontend public
	# HTTP/2 - see https://www.haproxy.com/blog/whats-new-haproxy-1-8/
	# h2 is HTTP2 with TLS - see https://http2.github.io/faq/
	# Order matters, so h2 before http1.1
	bind :443 ssl crt /etc/letsencrypt/live/mikemaccana.com/combined.pem alpn h2,http/1.1

	# Redirect http -> https
	bind :80
	redirect scheme https code 301 if ! { ssl_fc }

	# Redirect www -> example.com
	redirect prefix https://mikemaccana.com code 301 if { hdr(host) -i www.mikemaccana.com }

	# HSTS (15768000 seconds = 6 months)
	http-response set-header Strict-Transport-Security max-age=15768000

	# Use letsencrypt backend for ACME challenges
	acl letsencrypt-acl path_beg /.well-known/acme-challenge/
	use_backend letsencrypt if letsencrypt-acl

	# Everything goes to portfolio portfolio
	default_backend portfolio
	option httpclose
	option forwardfor

backend portfolio
	balance roundrobin
	server static 127.0.0.1:3000 check

backend letsencrypt
	server letsencrypt 127.0.0.1:54321
